/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 	0
#define NUMBERS 	1
#define MOVE		2
#define GAMING		3
#define MODIFIERS 	4
#define NOTHING 	5

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp TAB   &kp Q 	&kp W 		&kp E 		&kp R 		&kp T                                                		&kp Y 		&kp U  		&kp I 		&kp O 		&kp P		&kp SQT
	&kp LSHFT &kp A 	&kp S 		&kp D 		&kp F 		&kp G                                                		&kp H 		&kp J  		&kp K 		&kp L 		&kp SEMI 	&kp MINUS
	&kp LCTRL &kp Z 	&kp X 		&kp C 		&kp V 		&kp B 		&kp LPAR   	&kp ESC     	&kp LSHFT &kp RPAR 	&kp N 		&kp M 		&kp COMMA 	&kp PERIOD 	&kp SLASH 	&kp RCTRL
									&kp LGUI 	&kp LALT 	&kp DEL 	&kp SPACE 	&mo NUMBERS    	&mo MOVE  &kp RET   &kp BSPC 	&kp RALT 	&kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		numbers {
			bindings = <
	&kp F11 &kp F1 	&kp F2 	&kp F3 		&kp F4 		&kp F5 																&kp F6 		&kp F7 		&kp F8 		&kp F9 		&kp F10 	&kp F12
	&trans 	&kp N1 	&kp N2 	&kp N3 		&kp N4 		&kp N5 																&kp N6 		&kp N7 		&kp N8 		&kp N9 		&kp N0 		&trans
	&kp F13 &kp F14 &kp F15	&kp F16 	&kp F17 	&kp F18 &kp LBKT 	&kp PIPE					&trans 	&kp RBKT 	&kp F19 	&kp F20 	&kp F21 	&kp F22 	&kp F23 	&kp F24
							&kp LGUI 	&kp LALT 	&kp DEL 	&kp SPACE 	&mo NUMBERS    			&mo MOVE  &kp RET   &kp BSPC 	&kp RALT 	&kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		move {
			bindings = <
	&trans 	&trans 		&kp UP 		&trans 		&trans 	&trans 																&kp HOME 	&kp END 	&kp PG_UP 	&kp PG_DN 	&trans 	&trans
	&trans 	&kp LEFT 	&kp DOWN 	&kp RIGHT 	&trans 	&trans 																&kp LEFT 	&kp DOWN 	&kp UP 		&kp RIGHT 	&trans 	&trans
	&trans 	&trans 		&trans 		&trans 		&trans 	&trans 	&kp LBRC 	&trans						&trans &kp RBRC 	&trans 		&trans 		&trans 		&trans 		&trans 	&trans
							&kp LGUI 	&kp LALT 	&kp DEL 	&kp SPACE 	&mo NUMBERS    				&mo MOVE  &kp RET   &kp BSPC 	&kp RALT 	&kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		gaming {
			bindings = <
	&kp N1 	&kp TAB 	&kp Q 	&kp W 	&kp E 	&kp R 															&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&kp N2 	&kp LSHFT 	&kp A 	&kp S 	&kp D 	&kp F 															&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&kp N3 	&kp LCTRL 	&kp Z 	&kp X 	&kp C 	&kp V 	&kp M 	&kp ESC						&tog GAMING &trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans
							&kp LGUI 	&kp LALT 	&kp G &kp SPACE &mo NUMBERS 			&kp RET &kp RET &kp BSPC &kp RALT &kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		modifiers {
			bindings = <
	&bt BT_CLR 	&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 							&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&tog GAMING &trans 	&trans 	&trans 	&trans 	&trans 														&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&trans 		&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans						&trans &trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans
							&kp LGUI 	&kp LALT 	&kp DEL 	&kp SPACE 	&mo NUMBERS    	&mo MOVE  &kp RET   &kp BSPC 	&kp RALT 	&kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		nothing {
			bindings = <
	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 														&trans 	&trans 	&trans 	&trans 	&trans 	&trans
	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans						&trans &trans 	&trans 	&trans 	&trans 	&trans 	&trans 	&trans
							&kp LGUI 	&kp LALT 	&kp DEL &kp SPACE &mo NUMBERS 		&kp RET &kp RET &kp BSPC &kp RALT &kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

	};
};